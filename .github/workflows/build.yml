name: Build VST Plugin

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    
    - name: Setup Visual Studio
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    
    - name: Cache CMake build
      uses: actions/cache@v3
      with:
        path: |
          build/
          JUCE/build/
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cmake-
    
    - name: Configure CMake
      run: |
        cmake -B build -G "Visual Studio 17 2022" -A x64 `
          -DCMAKE_BUILD_TYPE=Release `
          -DCMAKE_CONFIGURATION_TYPES="Release"
    
    - name: Build VST3
      run: |
        cmake --build build --config Release --parallel
    
    - name: Prepare artifacts
      run: |
        mkdir artifacts
        # Copy VST3 (adjust path based on your plugin name)
        if (Test-Path "build\*_artefacts\Release\VST3\*.vst3") {
          Copy-Item -Recurse "build\*_artefacts\Release\VST3\*.vst3" artifacts\
        }
        # Alternative path structure
        if (Test-Path "build\Release\*.vst3") {
          Copy-Item -Recurse "build\Release\*.vst3" artifacts\
        }
        # List contents for debugging
        Get-ChildItem -Recurse build\ -Include "*.vst3" | Format-Table FullName
    
    - name: Upload VST3 artifact
      uses: actions/upload-artifact@v4
      with:
        name: VST3-Windows-x64
        path: artifacts/
    
    - name: Release Upload
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    
    - name: Cache CMake build
      uses: actions/cache@v3
      with:
        path: |
          build/
          JUCE/build/
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cmake-
    
    - name: Configure CMake
      run: |
        cmake -B build -G "Xcode" \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.13
    
    - name: Build VST3
      run: |
        cmake --build build --config Release --parallel
    
    - name: Prepare artifacts
      run: |
        mkdir artifacts
        # Copy VST3 (no AU anymore)
        find build -name "*.vst3" -type d -exec cp -r {} artifacts/ \;
        # List contents for debugging
        find build -name "*.vst3"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: VST3-macOS-Universal
        path: artifacts/

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          libjack-jackd2-dev \
          ladspa-sdk \
          libcurl4-openssl-dev \
          libfreetype6-dev \
          libx11-dev \
          libxcomposite-dev \
          libxcursor-dev \
          libxcursor-dev \
          libxext-dev \
          libxinerama-dev \
          libxrandr-dev \
          libxrender-dev \
          libglu1-mesa-dev \
          mesa-common-dev
    
    - name: Cache CMake build
      uses: actions/cache@v3
      with:
        path: |
          build/
          JUCE/build/
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cmake-
    
    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release
    
    - name: Build VST3
      run: |
        cmake --build build --config Release --parallel
    
    - name: Prepare artifacts
      run: |
        mkdir artifacts
        find build -name "*.vst3" -type d -exec cp -r {} artifacts/ \;
        # List contents for debugging
        find build -name "*.vst3"
    
    - name: Upload VST3 artifact
      uses: actions/upload-artifact@v4
      with:
        name: VST3-Linux-x64
        path: artifacts/